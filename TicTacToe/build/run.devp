<>MADE WITH JPX
clear();

recipe _tictactoegame__Board_ {
	board, winConditions;
	ingredients {
		attr board => for (i -> 0:9) => 0;
		attr winConditions => [
			[0, 1, 2],
			[3, 4, 5],
			[6, 7, 8],

			[0, 3, 6],
			[1, 4, 7],
			[2, 5, 8],

			[0, 4, 8],
			[2, 4, 6]
		];
	}

	method place<index, player> {
		if (index > 8 | index < 0) { return false;}
		if (this::board-index != 0) { return false; }
		pop(this::board, index);
		insert(this::board, player, index);
		return true;
	}

	method toString {
		var _tictactoegame__out_ => "";
		for (i -> 0:9) {
			_tictactoegame__out_ += ({0: '-', 1: 'x', 2: 'o'}.this::board-i) + "   ";
			if (!floating((i + 1) / 3)) {
				_tictactoegame__out_ += "\n";
			}
		}
		return _tictactoegame__out_;
	}
	
	method win<player> {
		var _tictactoegame__i_;
		for (condition <- this::winConditions) {
			_tictactoegame__i_ => 0;
			for (index <- condition) => 
				if (this::board-index == player) { _tictactoegame__i_++; }
			if (_tictactoegame__i_ == 3) { return true; }
		} return false;
	}

	method stalemate {
		for (_tictactoegame__i_ <- this::board) => 
			if (_tictactoegame__i_ == 0) { return false; }
		return true;
	}
};

fn _tictactoegame__game_ {
	var _tictactoegame__board_ => _tictactoegame__Board_();
	cal playing  -> !_tictactoegame__board_::win(1) & !_tictactoegame__board_::win(2) & !_tictactoegame__board_::stalemate();	

	fn _tictactoegame__place_<player> {
		var _tictactoegame__ind_ => -1;
		while (!_tictactoegame__board_::place(_tictactoegame__ind_, player)) {
			_tictactoegame__ind_ => nfield("What spot (1-9)") - 1;
		}
	}

	while (playing) {
		println(_tictactoegame__board_::toString());
		_tictactoegame__place_(1);
		if (!playing) { break; }
		println(_tictactoegame__board_::toString());
		_tictactoegame__place_(2);
	}
	println(_tictactoegame__board_::toString());
}

fn _tictactoegame__main_ {
	_tictactoegame__game_();
}







_tictactoegame__main_();


field("");
<>MADE WITH JPX